apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: edgex-ui-go
  name: edgex-ui-go
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      org.edgexfoundry.service: edgex-ui-go
  template:
    metadata:
      labels:
        org.edgexfoundry.service: edgex-ui-go
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
      containers:
      - name: edgex-ui-go
        image: edgexfoundry/edgex-ui-arm64:2.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: EDGEX_SECURITY_SECRET_STORE
          value: "false"
        - name: SERVICE_HOST
          value: edgex-ui-go 
        ports:
        - containerPort: 4000
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 4000
          timeoutSeconds: 1
        securityContext:
          runAsUser: 2002
          runAsGroup: 2001
      hostname: edgex-ui-go
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    org.edgexfoundry.service: edgex-ui-go
  name: edgex-ui-go
spec:
  type: ClusterIP
  selector:
    org.edgexfoundry.service: edgex-ui-go
  ports:     
  - name: tcp4000
    port: 4000
    targetPort: 4000  
---
apiVersion: v1
kind: Service
metadata:
  labels:
    org.edgexfoundry.service: edgex-ui-go
  name: edgex-ui-go-nodeport
spec:
  type: NodePort
  selector:
    org.edgexfoundry.service: edgex-ui-go
  ports:     
  - name: tcp4000
    port: 4000
    targetPort: 4000
    nodePort: 30400
