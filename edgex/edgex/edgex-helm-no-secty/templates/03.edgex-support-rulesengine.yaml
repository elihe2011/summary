apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kuiper-pv
spec:
  storageClassName: {{ .Values.storage.support.rulesengine.class }}
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.storage.support.rulesengine.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    org.edgexfoundry.service: edgex-support-rulesengine
  name: edgex-support-rulesengine
spec:
  replicas: {{ .Values.edgex.replicas.support.rulesengine }}
  selector:
    matchLabels:
      org.edgexfoundry.service: edgex-support-rulesengine
  template:
    metadata:
      labels:
        org.edgexfoundry.service: edgex-support-rulesengine
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/edge
                {{- if .Values.edgex.affinity.support.rulesengine.edgeNode }}
                operator: Exists
                {{- else }}
                operator: DoesNotExist
                {{- end }}
      containers:
      - name: edgex-support-rulesengine
        image: {{ .Values.edgex.image.support.rulesengine }}
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONNECTION__EDGEX__REDISMSGBUS__PORT
          value: "6379"
        - name: CONNECTION__EDGEX__REDISMSGBUS__PROTOCOL
          value: redis
        - name: CONNECTION__EDGEX__REDISMSGBUS__SERVER
          value: edgex-redis.$(NAMESPACE).svc
        - name: CONNECTION__EDGEX__REDISMSGBUS__TYPE
          value: redis
        - name: EDGEX__DEFAULT__PORT
          value: "6379"
        - name: EDGEX__DEFAULT__PROTOCOL
          value: redis
        - name: EDGEX__DEFAULT__SERVER
          value: edgex-redis.$(NAMESPACE).svc
        - name: EDGEX__DEFAULT__TOPIC
          value: rules-events
        - name: EDGEX__DEFAULT__TYPE
          value: redis
        - name: KUIPER__BASIC__CONSOLELOG
          value: "true"
        - name: KUIPER__BASIC__RESTPORT
          value: "59720"
        volumeMounts:
        - mountPath: /kuiper/data
          name: data
        ports:
        - containerPort: 59720
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 59720
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 59720
          timeoutSeconds: 1
        {{- if .Values.edgex.resources.support.rulesengine.enforceLimits }}
        resources:
          limits:
            memory: {{ .Values.edgex.resources.support.rulesengine.limits.memory }}
            cpu: {{ .Values.edgex.resources.support.rulesengine.limits.cpu }}
          requests:
            memory: {{ .Values.edgex.resources.support.rulesengine.requests.memory }}
            cpu: {{ .Values.edgex.resources.support.rulesengine.requests.cpu }}
        {{- end}}
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
      hostname: edgex-support-rulesengine
      restartPolicy: Always
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: kuiper-pv
---
apiVersion: v1
kind: Service
metadata:
  labels:
    org.edgexfoundry.service: edgex-support-rulesengine
  name: edgex-kuiper
spec:
  type: {{ .Values.expose.support.rulesengine.type }}
  selector:
    org.edgexfoundry.service: edgex-support-rulesengine
  ports:     
  - name: tcp59720
    port: 59720
    targetPort: 59720
    {{- if .Values.expose.support.rulesengine.nodePort }}
    nodePort: {{ .Values.expose.support.rulesengine.nodePort }}
    {{- end}}   
